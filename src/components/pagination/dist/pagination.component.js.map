{"version":3,"sources":["../src/pagination.component.js"],"names":["Pagination","props","getPageSummary","bind","getPageOption","handlePageChange","handlePageOptionChange","state","getInitialState","document","getElementsByTagName","querySelector","tag","createElement","id","innerHTML","appendChild","nextProps","setState","currentPageNumber","forcePage","currentPageSize","size","currentFirstPage","currentLastPage","dataSize","firstPage","lastPage","totalPages","total","currentPageOption","pageSummaryText","replace","__html","item","disabled","data","pageCount","Math","ceil","pageOptions","map","propTypes","number","isRequired","func","array","string","defaultProps"],"mappings":"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","file":"pagination.component.js","sourcesContent":["/**\n * <Pagination>. \n * options:\n *      total :- (Number | Required) //for total number of data\n *      size :- (Number | Required) //for total number of possible data per page\n *      dataSize :- (Number | Required) //for total number of data per page\n *      handlePageChange :- (func | optional) //for action on page change\n *      handlePageOptionChange :- (func | optional) //for action on page option change\n *      pageOptions :- (array | optional) //for provide page options, which helps to change data per page\n *                      ex: [10, 20, 50]\n *      pageSummaryText :- (html string | optional) //text to show in the place of page summary\n *                      ex: \"Showing <strong>#first_page# to #last_page#</strong> of #total_pages# entries\"\n * \n * Note: this component uses npm's react-paginate, so can pass it's supported props directly.\n */\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ReactPaginate from 'react-paginate';\nimport {\n    isEmpty,\n    isFunction\n} from 'lodash';\nimport classNames from 'classnames';\nimport { \n    PAGE_OPTIONS, \n    PAGE_SUMMARY \n} from './pagination.constants';\n\n/* style */\nimport cssStyle from './pagination';\n\nexport default class Pagination extends Component {\n    constructor(props) {\n        super(props);\n\n        //class actions binding\n        this.getPageSummary = this.getPageSummary.bind(this);\n        this.getPageOption = this.getPageOption.bind(this);\n        this.handlePageChange = this.handlePageChange.bind(this);\n        this.handlePageOptionChange = this.handlePageOptionChange.bind(this);\n\n        //default state init\n        this.state = this.getInitialState(props);\n    }\n\n    componentDidMount() {\n        if (!document.getElementsByTagName('head')[0].querySelector('style[id=\"react-pagination\"]')) {\n            let tag = document.createElement('style');\n            tag.id = 'react-pagination';\n            tag.innerHTML = cssStyle;\n            document.getElementsByTagName('head')[0].appendChild(tag);\n        }\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState(this.getInitialState(nextProps));\n    }\n\n    getInitialState(props) {\n        const currentPageNumber = props.forcePage + 1;\n        const currentPageSize = props.size;\n        const currentFirstPage = ((currentPageNumber * currentPageSize) - currentPageSize) + 1;\n        const currentLastPage = (currentPageNumber * currentPageSize) - (currentPageSize - props.dataSize);\n        const state = {\n            firstPage: currentFirstPage,\n            lastPage: currentLastPage,\n            totalPages: props.total,\n            currentPageOption: currentPageSize\n        };\n        return state;\n    }\n\n    getPageSummary() {\n        const firstPage = this.state.firstPage;\n        const lastPage = this.state.lastPage;\n        const totalPages = this.state.totalPages;\n        const pageSummaryText = this.props.pageSummaryText\n                                    .replace('#first_count#', firstPage)\n                                    .replace('#last_count#', lastPage)\n                                    .replace('#total_counts#', totalPages);\n        return <div dangerouslySetInnerHTML={{ __html: pageSummaryText }} ></div>;\n    }\n\n    getPageOption(item) {\n        const disabled = item > this.props.total;\n        return <button key={item} disabled={disabled} className={classNames({'selected': item === this.state.currentPageOption, 'disabled': disabled})} onClick={item <= this.props.total && this.handlePageOptionChange.bind(this, item)}>{item}</button>\n    }\n\n    handlePageOptionChange(item) {\n        if (item === this.state.currentPageOption) return;\n\n        this.setState({\n            currentPageOption: item\n        })\n\n        if (isFunction(this.props.handlePageOptionChange)) {\n            this.props.handlePageOptionChange(item);\n        }\n    }\n\n    handlePageChange(data) {\n        if (isEmpty(data)) {\n            return;\n        }\n        if (isFunction(this.props.handlePageChange)) {\n            data.size = this.state.currentPageOption;\n            this.props.handlePageChange(data);\n        }\n    }\n\n    render() {\n        const pageCount = Math.ceil(this.props.total / this.props.size);\n        return (\n            this.props.total && pageCount > 1 ?\n                <div className=\"ofb-pagination\">\n                    <ReactPaginate \n                        pageCount={pageCount}\n                        pageRangeDisplayed={5}\n                        marginPagesDisplayed={2}\n                        {...this.props}\n                        onPageChange={this.handlePageChange}\n                    />\n                    <div className=\"pagination-page-range\">\n                        {this.props.pageOptions.map((item) => {\n                            return this.getPageOption(item)\n                        })}\n                    </div>\n                    <div className=\"pagination-page-summary\">\n                        {this.getPageSummary()}\n                    </div>\n                </div>\n            : null\n        );\n    }\n}\n\nPagination.propTypes = {\n    total: PropTypes.number.isRequired,\n    size: PropTypes.number.isRequired,\n    dataSize: PropTypes.number.isRequired,\n    forcePage: PropTypes.number,\n    handlePageChange: PropTypes.func,\n    handlePageOptionChange: PropTypes.func,\n    pageOptions: PropTypes.array,\n    pageSummaryText: PropTypes.string\n}\n\nPagination.defaultProps = {\n    forcePage: 0,\n    handlePageChange: null,\n    handlePageOptionChange: null,\n    pageOptions: PAGE_OPTIONS,\n    pageSummaryText: PAGE_SUMMARY\n}"]}